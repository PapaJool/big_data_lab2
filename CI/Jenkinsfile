pipeline {
    agent any

    environment {
        DOCKERHUB_CREDS=credentials('mle-template')
        LC_ALL = "en_US.UTF-8"
        LANG    = "en_US.UTF-8"
        LANGUAGE = "en_US.UTF-8"
    }

options {
        timestamps()
        skipDefaultCheckout(true)
	}
    stages {
        stage('Clone github repository') {
            steps {
                cleanWs()
                sh 'git clone -b main https://github.com/PapaJool/big_data_lab2'
				}
			}

        stage('Checkout repo dir') {
            steps {
                sh 'cd big_data_lab2 && dir'
				}
			}

        stage('Login'){
            steps{
                //withCredentials([usernamePassword(credentialsId: 'mle-template', passwordVariable: 'DOCKER_REGISTRY_PWD', usernameVariable: 'DOCKER_REGISTRY_USER')]){
                //sh 'echo $DOCKER_REGISTRY_PWD | docker login -u $DOCKER_REGISTRY_USER --password-stdin'}
                //sh 'echo $DOCKERHUB_CREDS_PSW | docker login -u $DOCKERHUB_CREDS_USR --password-stdin'
                sh 'docker login -u $DOCKERHUB_CREDS_USR -p $DOCKERHUB_CREDS_PSW'
                }
            }

        stage('Create and run docker container') {
            steps {
                script {
                    try {
                        sh 'cd big_data_lab2 && docker compose build'
                        }

                    finally {
                    sh '''
                        cd big_data_lab2
                        docker compose up -d
                        '''
                        }
				    }
                }
            }

        // use for multi containers:
        //docker exec %containerId% cd app && coverage run src/unit_tests/test_preprocess.py && coverage run -a src/unit_tests/test_training.py && coverage report -m
        //use for single container (with auth):
        //docker run --name mle-template_web_1 cd app && coverage run src/unit_tests/test_preprocess.py && coverage run -a src/unit_tests/test_training.py && coverage report -m

         /* stage('Checkout container logs') {
	    steps {
	        script {
	            sh '''
	                docker-compose up -d
	                containerId=$(docker ps -qf "name=mle-template-web-1")
	                echo $containerId
	                if [ -z "$containerId" ]; then
	                    echo "No container running"
	                else
	                    docker logs --tail 1000 -f $containerId
	                fi
	            '''
	        }
	    }
	} */

        stage('Checkout coverage report'){
            steps{
                dir("big_data_lab2"){
                    sh '''
                    docker compose logs -t --tail 10
                    '''
                }
            }
        }

        stage('Push'){
            steps{
                sh 'docker push papajool/mle-template:latest'
            }
        }
	    
		
	}

    post {
        always {
            sh 'docker logout'
        }
    }
}
